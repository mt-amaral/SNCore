@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

@code {
    [Parameter]
    public ReportSettings? Report { get; set; }

    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Carrega o JavaScript associado ao componente
            module = await JSRuntime.InvokeAsync<IJSObjectReference>(
                "import", "./Components/Dashboard/BarChart.razor.js");

            if (Report != null)
            {
                await module.InvokeVoidAsync("testenobre", Report);
            }
        }
        else if (module != null && Report != null)
        {
            // Atualiza o gráfico ao alterar o Report
            await module.InvokeVoidAsync("testenobre", Report);
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (module != null)
        {
            await module.DisposeAsync();
        }
    }
}