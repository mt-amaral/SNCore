@inject IJSRuntime JSRuntime
@implements IAsyncDisposable
<div class="grid-stack-item">
    <div class="card-grid-stack" id="@($"chart-{Report?.Title.Replace(" ", "-")}")">
    </div>
</div>

@code {
    [Parameter]
    public ReportSettings? Report { get; set; }

    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        module = await JSRuntime.InvokeAsync<IJSObjectReference>(
        "import", "./Components/Dashboard/BarChart.razor.js");

            if (Report != null)
            {
                var containerId = $"chart-{Report.Title.Replace(" ", "-")}";
                await module.InvokeVoidAsync("testenobre", containerId, Report);
            }
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (module != null)
        {
            await module.DisposeAsync();
        }
    }
}
