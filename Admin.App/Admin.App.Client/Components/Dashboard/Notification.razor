@using Admin.Shared.Response
@namespace Admin.App.Client.Components.Dashboard

<div style="height: 450px;" class="d-flex flex-column mud-width-full">
    <!-- Cabeçalho fixo -->
    <MudPaper Elevation="0" Class="d-flex mud-width-full" Height="60px">
        <MudListSubheader Class="d-flex mud-width-full bg-default">
            <MudText Typo="Typo.h6" Color="Color.Default" Class="p-3">Recent incidents</MudText>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert"
                           Color="Color.Inherit"
                           aria-label="add to favorite"/>
        </MudListSubheader>
    </MudPaper>

    <!-- Lista rolável -->
    <MudPaper Height="100%"
              Class="mud-width-full"
              Style="overflow: auto; flex-grow: 1;"
              Elevation="0"
              Outlined="true">
        <MudList T="AlertItemResponse" Dense="true" Class="mud-width-full" >
            @foreach (var alert in Notifications)
            {
                <MudListItem  Icon="@GetAlertIcon(@alert.TypeAlert)"
                              IconColor="@GetAlertColor(@alert.TypeAlert)"
                              IconSize="Size.Small"
                              Dense="true"
                              Href="@alert.Href">
                    <div style="display: flex; align-items: center; width: 100%;">
                        <div>
                            <p class="notification-title"><b>@alert.Title</b></p>
                            <p class="notification-sub-title">@alert.Message</p>
                        </div>
                        <MudSpacer/>
                        <p style="font-size: 10px; margin: 0px 5px 10px 0px">@alert.CreateAt.ToString("HH:mm")</p>
                        <MudIconButton Icon="@Icons.Material.Outlined.Delete"
                                       Size="Size.Small"
                                       Color="Color.Error"
                                       OnClick="@(() => RemoveAlert(alert))"/>
                    </div>
                </MudListItem>
                <MudDivider Class="my-1"/>
            }
        </MudList>
    </MudPaper>
</div>

@code {
    [Parameter]
    public List<AlertItemResponse> Notifications { get; set; } = new();
    
    private void RemoveAlert(AlertItemResponse alert)
    {
        Notifications.Remove(alert);
    }

    private string GetAlertIcon(AlertItemIcon icon)
    {
        switch (icon)
        {
            case AlertItemIcon.Erro:
                return Icons.Material.Outlined.WarningAmber;
            case AlertItemIcon.Information:
                return Icons.Material.Outlined.ErrorOutline;
            case AlertItemIcon.Success:
                return Icons.Material.Outlined.CheckCircle;
            default:
                return Icons.Material.Outlined.CheckCircle;
        }
    }
    
    private Color GetAlertColor(AlertItemIcon icon)
    {
        switch (icon)
        {
            case AlertItemIcon.Erro:
                return Color.Error;
            case AlertItemIcon.Information:
                return Color.Info;
            case AlertItemIcon.Success:
                return Color.Success;
            default:
                return Color.Info;
        }
    }
}