<MudPaper Height="120px" Elevation="3" Class="p-4 rounded d-flex flex-column">
    <MudText Typo="Typo.body2">Graphite on roof</MudText>
    
    @if (!isCounting)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" Size="Size.Small" />
    }
    else
    {
        <MudText Typo="Typo.h4">@displayText</MudText>
    }

    <MudChart ChartType="ChartType.Bar" InputData="new double[] { 5, 8, 6, 7, 4, 5, 3 }"/>
</MudPaper>

@code {
    private int currentValue = 0;
    private int targetValue = 149567;
    private int durationMs = 500; 
    private string displayText = "";
    private bool isCounting = false; 

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(300); 
            isCounting = true;
            StateHasChanged();
            await AnimateCounter();
        }
    }

    private async Task AnimateCounter()
    {
        int steps = 50;
        int delay = durationMs / steps;
        int increment = targetValue / steps;

        for (int i = 0; i < steps; i++)
        {
            currentValue += increment;
            displayText = currentValue.ToString("N0");
            StateHasChanged();
            await Task.Delay(delay);
        }

        displayText = targetValue.ToString("N0"); 
        StateHasChanged();
    }
}