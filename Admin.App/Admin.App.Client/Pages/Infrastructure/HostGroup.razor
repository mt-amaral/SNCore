@page "/infrastructure/hostgroup"
@using Admin.Shared.Response.Host
@using Admin.App.Client.Components
@attribute [Authorize]
@inject IGroupHostService GroupHostService
@inject ISnackbar Snackbar

<SimpleTabs>
    <TabItem Title="Auto">
        <p>Conteúdo da aba Auto</p>
        <MudButton>Botão exemplo</MudButton>
    </TabItem>

    <TabItem Title="WebAssembly">
        <p>Conteúdo da aba WebAssembly</p>
    </TabItem>
</SimpleTabs>

@*@if (Loading)
{
    <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
}
else if (_hostGroup is not null)
{

}*@
@code {
    
    
    
    
    
    
    
    private List<GroupHostResponse?>? _hostGroup { get; set; }
    private bool Loading { get; set; } = true;  
    private HashSet<GroupHostResponse> _selectedGroup = new HashSet<GroupHostResponse>();
    

    protected override async Task OnInitializedAsync()
    {
        _hostGroup = await GroupHostService.GetHostGroupList().HandleResponseAsync(Snackbar);
        Loading = false;
    }
}