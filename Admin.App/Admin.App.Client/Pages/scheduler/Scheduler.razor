@page "/scheduler"
@using Admin.App.Client.Components.Dialog
@using Admin.App.Client.Components.Grid
@using Admin.Shared.Response
@inject ExpressionService ExpressionService
@inject IDialogService Dialog

<MudGrid Justify="Justify.Center" Style="margin-top: 15px">
    <MudItem xs="12" sm="12" md="10" lg="6" xl="6" xxl="6">
        <MudPaper Width="100%" Height="130px" Style="padding: 15px">
            <MudButton @onclick="OpenDialogAsync" Variant="Variant.Outlined" Color="Color.Primary">
                New Scheduler
            </MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

<MudGrid Justify="Justify.Center" Style="height: 130px; align-items: center">
    <MudItem xs="12" sm="12" md="10" lg="6" xl="6" xxl="6">
        <SchedulerGrid ExpressionResponse="@ExpressionResponse" />
    </MudItem>
</MudGrid>


@code {
    
    public IEnumerable<ExpressionResponse> ExpressionResponse { get; set; } = new List<ExpressionResponse>();
    public string Expression { get; set; } = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        ExpressionResponse = await ExpressionService.GetExpressionAsync() ?? new List<ExpressionResponse>();
    }
    
    private async Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        await Dialog.ShowAsync<AddCron>("Simple Dialog", options);
    }
    
}