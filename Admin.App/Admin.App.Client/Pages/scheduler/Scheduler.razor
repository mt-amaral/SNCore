@page "/scheduler"
@using Admin.App.Client.Components.Grid
@using Admin.Shared.Response
@inject ExpressionService ExpressionService
@using Admin.App.Client.Utils

<MudGrid Justify="Justify.Center" Style="height: 130px; align-items: center; margin-bottom: 20px">
    <MudItem xs="12" sm="12" md="4" lg="6" xl="6" xxl="6">
        <MudPaper Style="height: 120px; padding: 30px; display: flex; align-items: center;" Elevation="0" >
            <MudTextField   @bind-Value="Expression"  Margin="Margin.Dense" Variant="Variant.Outlined" Style="text-align: center;"/>
            <MudSpacer/>
            <MudText Typo="Typo.h6"> Texto de testee, texo teste</MudText>
        </MudPaper>

    </MudItem>
</MudGrid>


<MudGrid Justify="Justify.Center" Style="height: 130px; align-items: center">
    <MudItem xs="12" sm="12" md="4" lg="6" xl="6" xxl="6">
        <SchedulerGrid ExpressionResponse="@ExpressionResponse" />

    </MudItem>
</MudGrid>


@code {
    
    public IEnumerable<ExpressionResponse> ExpressionResponse { get; set; } = new List<ExpressionResponse>();
    public string Expression { get; set; } = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        ExpressionResponse = await ExpressionService.GetExpressionAsync() ?? new List<ExpressionResponse>();
    }
    

}