@page "/hardware"
@using System.Net.Http.Json
@inject HardwareApi hardwareApi

<MudText Align="Align.Center" Typo="Typo.h4" >HARDWARE</MudText>
<MudContainer MaxWidth="MaxWidth.Medium" >

@if (!hardwareList.Any())
{
    <MudProgressLinear Indeterminate="true" Class="my-7"/>
}
else
{
        <MudTable Items="@hardwareList" MultiSelection="true" Striped="true" T="HardwareResponse"  SelectedItemsChanged="OnSelectedItemsChanged">
    <ToolBarContent>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>id</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Model</MudTh>
        <MudTh>Ipv4</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="id">@context.Id</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="Model">@context.Model</MudTd>
        <MudTd DataLabel="Ipv4">@context.Ipv4</MudTd>
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" />
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" />
    </RowTemplate>
    <PagerContent>
        <MudTablePager HideRowsPerPage="true"/>
    </PagerContent>
    </MudTable>
}

</MudContainer>

@code {
    private IEnumerable<HardwareResponse> hardwareList = new List<HardwareResponse>();
    private string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            hardwareList = await hardwareApi.GetHardwaresAsync();
        }
        catch (Exception ex)
        {
            hardwareList = Array.Empty<HardwareResponse>();
        }
    }
    private void OnSelectedItemsChanged(HashSet<HardwareResponse> elements)
    {
        ;
    }
}
